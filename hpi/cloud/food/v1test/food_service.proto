syntax = "proto3";

package hpi.cloud.food.v1test;

import "google/type/date.proto";
import "hpi/cloud/food/v1test/food.proto";

option java_multiple_files = true;
option java_outer_classname = "FoodServiceProto";
option java_package = "de.hpi.cloud.food.v1test";

// Provides access to food served at restaurants like the canteen and Ulf's Caf√©.
service FoodService {
  // Lists restaurants.
  rpc ListRestaurants (ListRestaurantsRequest) returns (ListRestaurantsResponse);

  // Gets a restaurant.
  rpc GetRestaurant (GetRestaurantRequest) returns (Restaurant);


  // Lists items on the menu.
  rpc ListMenuItems (ListMenuItemsRequest) returns (ListMenuItemsResponse);

  // Gets an item as it appears on the menu.
  rpc GetMenuItem (GetMenuItemRequest) returns (MenuItem);


  // Lists labels.
  rpc ListLabels (ListLabelsRequest) returns (ListLabelsResponse);

  // Gets a label.
  rpc GetLabel (GetLabelRequest) returns (Label);


  // Lists counters for a restaurant.
  rpc ListCounters (ListCountersRequest) returns (ListCountersResponse);

  // Gets a counter.
  rpc GetCounter (GetCounterRequest) returns (Counter);
}

// Request message for listing restaurants using [ListRestaurants][hpi.cloud.food.v1test.FoodService.ListRestaurants].
message ListRestaurantsRequest {
  // The maximum number of restaurants to return in the response.
  int32 page_size = 1;

  // A pagination token returned from a previous call to `ListRestaurants`
  // that indicates where this listing should continue from.
  string page_token = 2;
}

// Response message for listing restaurants using [ListRestaurants][hpi.cloud.food.v1test.FoodService.ListRestaurants].
message ListRestaurantsResponse {
  // A possibly paginated list of restaurants.
  repeated Restaurant restaurants = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results.
  string next_page_token = 2;
}

// Request message for [GetRestaurant][hpi.cloud.food.v1test.FoodService.GetRestaurant].
message GetRestaurantRequest {
  // Required. The restaurant ID.
  string id = 1;
}


// Request message for listing items on the menu using [ListMenuItems][hpi.cloud.food.v1test.FoodService.ListMenuItems].
message ListMenuItemsRequest {
  // The maximum number of menu items to return in the response.
  int32 page_size = 1;

  // A pagination token returned from a previous call to `ListMenuItems`
  // that indicates where this listing should continue from.
  string page_token = 2;

  // If specified, only menu items served at this restaurant are returned.
  string restaurant_id = 3;
  
  // If specified, only menu items served on this day are returned.
  google.type.Date date = 4;
}

// Response message for listing MenuItems using [ListMenuItems][hpi.cloud.food.v1test.FoodService.ListMenuItems].
message ListMenuItemsResponse {
  // A possibly paginated list of menu items.
  repeated MenuItem items = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results.
  string next_page_token = 2;
}

// Request message for [GetMenuItem][hpi.cloud.food.v1test.FoodService.GetMenuItem].
message GetMenuItemRequest {
  // Required. The ID of the menu item.
  string id = 1;
}


// Request message for listing labels using [ListLabels][hpi.cloud.food.v1test.FoodService.ListLabels].
message ListLabelsRequest {
  // The maximum number of labels to return in the response.
  int32 page_size = 1;

  // A pagination token returned from a previous call to `ListLabels`
  // that indicates where this listing should continue from.
  string page_token = 2;
}

// Response message for listing Labels using [ListLabels][hpi.cloud.food.v1test.FoodService.ListLabels].
message ListLabelsResponse {
  // A possibly paginated list of labels.
  repeated Label Labels = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results.
  string next_page_token = 2;
}

// Request message for [GetLabel][hpi.cloud.food.v1test.FoodService.GetLabel].
message GetLabelRequest {
  // Required. The label ID.
  string id = 1;
}


// Request message for listing counters for a given restaurant using [ListCounters][hpi.cloud.food.v1test.FoodService.ListCounters].
message ListCountersRequest {
  // Required. ID of the restaurant the counters should be listed for.
  string restaurant_id = 1;

  // The maximum number of labels to return in the response.
  int32 page_size = 2;

  // A pagination token returned from a previous call to `ListLabels`
  // that indicates where this listing should continue from.
  string page_token = 3;
}

// Response message for listing Counters using [ListCounters][hpi.cloud.food.v1test.FoodService.ListCounters].
message ListCountersResponse {
  // A possibly paginated list of counters.
  repeated Counter Counters = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results.
  string next_page_token = 2;
}

// Request message for [GetCounter][hpi.cloud.food.v1test.FoodService.GetCounter].
message GetCounterRequest {
  // Required. The label ID.
  string id = 1;
}
