syntax = "proto3";

package hpi.cloud.course.v1test;

import "hpi/cloud/course/v1test/course.proto";

option java_multiple_files = true;
option java_outer_classname = "CourseServiceProto";
option java_package = "de.hpi.cloud.course.v1test";

// Provides access course information.
service CourseService {
  // Lists course series.
  rpc ListCourseSeries (ListCourseSeriesRequest) returns (ListCourseSeriesResponse);

  // Gets a course serie.
  rpc GetCourseSeries (GetCourseSeriesRequest) returns (CourseSeries);


  // Lists semesters.
  rpc ListSemesters (ListSemestersRequest) returns (ListSemestersResponse);

  // Gets a semester.
  rpc GetSemester (GetSemesterRequest) returns (Semester);


  // Lists courses.
  rpc ListCourses (ListCoursesRequest) returns (ListCoursesResponse);

  // Gets a course.
  rpc GetCourse (GetCourseRequest) returns (Course);


  // Gets details for a course.
  rpc GetCourseDetail (GetCourseDetailRequest) returns (CourseDetail);
}

// Request message for listing course series using [ListCourseSeries][hpi.cloud.course.v1test.CourseService.ListCourseSeries].
message ListCourseSeriesRequest {
  // The maximum number of course series to return in the response.
  int32 page_size = 1;

  // A pagination token returned from a previous call to `ListCourseSeries`
  // that indicates where this listing should continue from.
  string page_token = 2;
}

// Response message for listing CourseSeries using [ListCourseSeries][hpi.cloud.course.v1test.CourseService.ListCourseSeries].
message ListCourseSeriesResponse {
  // A possibly paginated list of course series.
  repeated CourseSeries course_series = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results.
  string next_page_token = 2;
}

// Request message for [GetCourseSeries][hpi.cloud.course.v1test.CourseService.GetCourseSeries].
message GetCourseSeriesRequest {
  // Required. The course series ID.
  string id = 1;
}


// Request message for listing semesters using [ListSemesters][hpi.cloud.course.v1test.CourseService.ListSemesters].
message ListSemestersRequest {
  // The maximum number of semesters to return in the response.
  int32 page_size = 1;

  // A pagination token returned from a previous call to `ListSemesters`
  // that indicates where this listing should continue from.
  string page_token = 2;
}

// Response message for listing semesters using [ListSemesters][hpi.cloud.course.v1test.CourseService.ListSemesters].
message ListSemestersResponse {
  repeated Semester semesters = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results.
  string next_page_token = 2;
}

// Request message for [GetSemester][hpi.cloud.course.v1test.CourseService.GetSemester].
message GetSemesterRequest {
  // Required. The semester ID.
  string id = 1;
}


// Request message for listing courses using [ListCourses][hpi.cloud.course.v1test.CourseService.ListCourses].
message ListCoursesRequest {
  // The maximum number of courses to return in the response.
  int32 page_size = 1;

  // A pagination token returned from a previous call to `ListCourses`
  // that indicates where this listing should continue from.
  string page_token = 2;

  // If specified, only courses of this series are returned.
  string course_series_id = 3;

  // If specified, only courses offered in this semester are returned.
  string semester_id = 4;
}

// Response message for listing courses using [ListCourses][hpi.cloud.course.v1test.CourseService.ListCourses].
message ListCoursesResponse {
  repeated Course courses = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results.
  string next_page_token = 2;
}

// Request message for [GetCourse][hpi.cloud.course.v1test.CourseService.GetCourse].
message GetCourseRequest {
  // Required. The course ID.
  string id = 1;
}


// Request message for [GetCourseDetail][hpi.cloud.course.v1test.CourseService.GetCourseDetail].
message GetCourseDetailRequest {
  // Required. The ID of the course whose details to get.
  string course_id = 1;
}
